@model BlogApp.ViewModels.PostViewModel

<h2>Edit Post</h2>
<hr>
<form asp-controller="Post" asp-action="Edit" method="post" enctype="multipart/form-data">
    <div asp-validation-summary="All" class="text-danger"></div>
    <div class="mb-3">
        <label asp-for="Title" class="control-label"></label>
        <input asp-for="Title" class="form-control" />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="Description" class="control-label"></label>
        <input asp-for="Description" class="form-control"></input>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="Content" class="control-label"></label>
        <textarea asp-for="Content" class="form-control"></textarea>
        <span asp-validation-for="Content" class="text-danger"></span>
    </div>
    
    <div class="mb-3">
        <label asp-for="Image" class="control-label"></label>
        <input asp-for="Image" class="form-control" type="file" />
        <span asp-validation-for="Image" class="text-danger"></span>
    </div>
    @if (!string.IsNullOrEmpty(Model.ImageUrl))
    {
        <div class="mb-3">
            <label>Current Image</label>
            <div>
                <img src="@Model.ImageUrl" class="img-fluid rounded" alt="Current Image" style="max-width: 200px;" />
            </div>
        </div>
    }
    <div class="mb-3">
        <input type="submit" value="Save" class="btn btn-primary" />
    </div>
</form>

@section Scripts {
    <script src="https://cdn.tiny.cloud/1/jsdva02stqiqet62bc9v0a63gu6q34irn58jn8ap01llcrx1/tinymce/7/tinymce.min.js" referrerpolicy="origin"></script>
    <script>
      tinymce.init({
        selector: 'textarea',
        plugins: [
          'anchor', 'autolink', 'charmap', 'codesample', 'emoticons', 'image', 'link', 'lists', 'media', 'searchreplace', 'table', 'visualblocks', 'wordcount',
          'checklist', 'mediaembed', 'casechange', 'export', 'formatpainter', 'pageembed', 'a11ychecker', 'tinymcespellchecker', 'permanentpen', 'powerpaste', 'advtable', 'advcode', 'editimage', 'advtemplate', 'ai', 'mentions', 'tinycomments', 'tableofcontents', 'footnotes', 'mergetags', 'autocorrect', 'typography', 'inlinecss', 'markdown',
          'importword', 'exportword', 'exportpdf'
        ],
        toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
        tinycomments_mode: 'embedded',
        tinycomments_author: 'Author name',
        mergetags_list: [
          { value: 'First.Name', title: 'First Name' },
          { value: 'Email', title: 'Email' },
        ],
        ai_request: (request, respondWith) => respondWith.string(() => Promise.reject('See docs to implement AI Assistant')),
      });
    </script>
}